library(plotly)
p <- plot_ly(
type = 'scatterpolar',
fill = 'toself'
) %>%
add_trace(
r = c(39, 28, 8, 7, 28, 39),
theta = c('A','B','C', 'D', 'E', 'A'),
name = 'Group A'
) %>%
add_trace(
r = c(1.5, 10, 39, 31, 15, 1.5),
theta = c('A','B','C', 'D', 'E', 'A'),
name = 'Group B'
) %>%
layout(
polar = list(
radialaxis = list(
visible = TRUE,
range = c(0,50)
)
)
)
p
devtools:::test_active_file()
devtools:::test_active_file()
devtools:::run_examples()
clc
clearPushBack()
# 清空环境
rm(list=ls())
site="https://mirrors.tuna.tsinghua.edu.cn/CRAN"
package_list = c("factoextra","cluster")
for(p in package_list){
if(!suppressWarnings(suppressMessages(require(p, character.only = TRUE, quietly = TRUE, warn.conflicts = FALSE)))){
install.packages(p, repos=site)
suppressWarnings(suppressMessages(library(p, character.only = TRUE, quietly = TRUE, warn.conflicts = FALSE)))
}
}
# 数据准备
# 使用内置的R数据集USArrests
data("USArrests")
# remove any missing value (i.e, NA values for not available)
USArrests = na.omit(USArrests) #view the first 6 rows of the data
head(USArrests, n=6)
# 显示测试数据示例如下
# 显示测试数据示例如下
head(USArrests, n=6)
# 在聚类之前我们可以先进行一些必要的数据检查即数据描述性统计，如平均值、标准差等
desc_stats = data.frame( Min=apply(USArrests, 2, min),#minimum
Med=apply(USArrests, 2, median),#median
Mean=apply(USArrests, 2, mean),#mean
SD=apply(USArrests, 2, sd),#Standard deviation
Max=apply(USArrests, 2, max)#maximum
)
desc_stats = round(desc_stats, 1)#保留小数点后一位head(desc_stats)
desc_stats
#统计结果如下
desc_stats
# 变量有很大的方差及均值时需进行标准化
df = scale(USArrests)
# 数据集群性评估，使用get_clust_tendency()计算Hopkins统计量
res = get_clust_tendency(df, 40, graph = TRUE)
res$hopkins_stat
#Hopkins统计量的值<0.5，表明数据是高度可聚合的。
res$hopkins_stat
res$plot
res$plot ##近似看出可聚类
set.seed(123)
## Compute the gap statistic
gap_stat = clusGap(df, FUN = kmeans, nstart = 25, K.max = 10, B = 500)
# Plot the result
fviz_gap_stat(gap_stat)
km.res = kmeans(df, 4, nstart = 25)
# Visualize clusters using factoextra
fviz_cluster(km.res, USArrests)
km.res = kmeans(df, 5, nstart = 25)
# Visualize clusters using factoextra
fviz_cluster(km.res, USArrests)
sil = silhouette(km.res$cluster, dist(df))
rownames(sil) = rownames(USArrests)
head(sil[, 1:3])
#可视化
# Visualize
fviz_silhouette(sil)# Visualize
fviz_silhouette(sil)
neg_sil_index = which(sil[, "sil_width"] < 0)
sil[neg_sil_index, , drop = FALSE]
#############################################
##也可使用eclust聚类
# Compute k-means
res.km = eclust(df, "kmeans")
# Gap statistic plot
fviz_gap_stat(res.km$gap_stat)
# Enhanced hierarchical clustering
res.hc = eclust(df, "hclust") # compute hclust
fviz_dend(res.hc, rect = TRUE) # dendrogam
fviz_silhouette(res.hc) # silhouette plot
fviz_cluster(res.hc) # scatter plot
library(forecast)
library(tseries)
library(readxl)
setwd("D://A-编程//lens数据分析")
df_cited_a<-read.csv("被引论文_第一阶段_学科主题.csv")
df_cited_b<-read.csv("被引论文_第二阶段_学科主题.csv")
df_cited_c<-read.csv("被引论文_第三阶段_学科主题.csv")
df_cited_d<-read.csv("被引论文_第四阶段_学科主题.csv")
library(reshape2)
library(ggplot2)
#注释：package使用之前需要调???
#设置字体
windowsFonts(
Times New Roman = windowsFont("Times New Roman"),
ST = windowsFont("宋体")
)
myfunction<-function(df,l){
p<-ggplot(df, aes(x = Discipline , y = Topic, size = Quantity, color=Discipline))+ geom_point()+
#labs(x=NULL,y=NULL)+ #设置坐标轴标???
#guides(color = guide_legend( ncol = 1, byrow = True))+ #设置图例为一???
guides(color = "none")+ #隐藏颜色图例
#scale_size(range=c(0, 5))+
theme(panel.background = element_blank(), #设置背景???
panel.grid.major = element_line(colour = "gray"), #线条
panel.border = element_rect(colour="black",fill=NA), #边框黑色
plot.margin=margin(t=5, #上边???(top)
r=10, #右边???(right)
b=5, #下边???(bottom)
l=l, #左边???(left)
unit = 'pt'
),
#legend.position = "none",
axis.text.x = element_text(angle=45, hjust = 1, size = 5, family = "Times New Roman"),
axis.text.y = element_text(size = 6, family = "Times New Roman"),
axis.text = element_text(size = 6, family = "Times New Roman"),
axis.title = element_text(size = 8, family = "Times New Roman"),
legend.text = element_text(size =6, family = "Times New Roman"),
legend.title = element_text(size =8, family = "Times New Roman"),
legend.key.size = unit(2,"pt"), #图例符号大小
legend.direction = "vertical", #图例方向
legend.spacing = unit(0.01, "cm"),
legend.spacing.x = unit(0.01, "cm"),
)
return(p)
}
p1=myfunction(df=df_cited_a,l=20)
p2=myfunction(df=df_cited_b,l=0)
p3=myfunction(df=df_cited_c,l=20)
p4=myfunction(df=df_cited_d,l=0)
layout<-gridExtra::grid.arrange(p1,p2,p3,p4,
layout_matrix=rbind(c(1,2),c(3,4)))
ggsave("cited_bubble.png",layout,width=10,height=8,dpi=2400)
df_citing_e<-read.csv("施引专利_第一阶段_学科主题.csv")
df_citing_f<-read.csv("施引专利_第二阶段_学科主题.csv")
df_citing_g<-read.csv("施引专利_第三阶段_学科主题.csv")
df_citing_h<-read.csv("施引专利_第四阶段_学科主题.csv")
df_citing_i<-read.csv("施引专利_第五阶段_学科主题.csv")
myfunction_1<-function(df,l){
p<-ggplot(df, aes(x = IPC , y = Topic, size = Quantity, color=IPC))+ geom_point()+
#labs(x=NULL,y=NULL)+ #设置坐标轴标???
#guides(color = guide_legend( ncol = 1, byrow = True))+ #设置图例为一???
guides(color = "none")+ #隐藏颜色图例
#scale_size(range=c(0, 5))+
theme(panel.background = element_blank(), #设置背景???
panel.grid.major = element_line(colour = "gray"), #线条
panel.border = element_rect(colour="black",fill=NA), #边框黑色
plot.margin=margin(t=5, #上边???(top)
r=10, #右边???(right)
b=5, #下边???(bottom)
l=l, #左边???(left)
unit = 'pt'
),
#legend.position = "none",
axis.text.x = element_text(angle=45, hjust = 1, size = 5, family = "Times New Roman"),
axis.text.y = element_text(size = 6, family = "Times New Roman"),
axis.text = element_text(size = 6, family = "Times New Roman"),
axis.title = element_text(size = 8, family = "Times New Roman"),
legend.text = element_text(size =6, family = "Times New Roman"),
legend.title = element_text(size =8, family = "Times New Roman"),
legend.key.size = unit(2,"pt"), #图例符号大小
legend.direction = "vertical", #图例方向
legend.spacing = unit(0.01, "cm"),
legend.spacing.x = unit(0.01, "cm"),
)
return(p)
}
p5<-myfunction_1(df=df_citing_e,l=5)
p6<-myfunction_1(df=df_citing_f,l=5)
p7<-myfunction_1(df=df_citing_g,l=5)
p8<-myfunction_1(df=df_citing_h,l=5)
p9<-myfunction_1(df=df_citing_i,l=5)
layout1<-gridExtra::grid.arrange(p5,p6,p7,p8,p9,
layout_matrix=rbind(c(1,2),c(3,4),c(5,6))
)
ggsave("citing_bubble.png",layout1,width=10,height=8,dpi=2400)
setwd("D://A-编程//lens数据分析")
df_cited_a<-read.csv("被引论文_第一阶段_学科主题.csv")
df_cited_b<-read.csv("被引论文_第二阶段_学科主题.csv")
df_cited_c<-read.csv("被引论文_第三阶段_学科主题.csv")
df_cited_d<-read.csv("被引论文_第四阶段_学科主题.csv")
library(reshape2)
library(ggplot2)
#注释：package使用之前需要调???
#设置字体
windowsFonts(
Times = windowsFont("Times New Roman"),
ST = windowsFont("宋体")
)
myfunction<-function(df,l){
p<-ggplot(df, aes(x = Discipline , y = Topic, size = Quantity, color=Discipline))+ geom_point()+
#labs(x=NULL,y=NULL)+ #设置坐标轴标???
#guides(color = guide_legend( ncol = 1, byrow = True))+ #设置图例为一???
guides(color = "none")+ #隐藏颜色图例
#scale_size(range=c(0, 5))+
theme(panel.background = element_blank(), #设置背景???
panel.grid.major = element_line(colour = "gray"), #线条
panel.border = element_rect(colour="black",fill=NA), #边框黑色
plot.margin=margin(t=5, #上边???(top)
r=10, #右边???(right)
b=5, #下边???(bottom)
l=l, #左边???(left)
unit = 'pt'
),
#legend.position = "none",
axis.text.x = element_text(angle=45, hjust = 1, size = 5, family = "Times New Roman"),
axis.text.y = element_text(size = 6, family = "Times New Roman"),
axis.text = element_text(size = 6, family = "Times New Roman"),
axis.title = element_text(size = 8, family = "Times New Roman"),
legend.text = element_text(size =6, family = "Times New Roman"),
legend.title = element_text(size =8, family = "Times New Roman"),
legend.key.size = unit(2,"pt"), #图例符号大小
legend.direction = "vertical", #图例方向
legend.spacing = unit(0.01, "cm"),
legend.spacing.x = unit(0.01, "cm"),
)
return(p)
}
p1=myfunction(df=df_cited_a,l=20)
p2=myfunction(df=df_cited_b,l=0)
p3=myfunction(df=df_cited_c,l=20)
p4=myfunction(df=df_cited_d,l=0)
layout<-gridExtra::grid.arrange(p1,p2,p3,p4,
layout_matrix=rbind(c(1,2),c(3,4)))
ggsave("cited_bubble.png",layout,width=10,height=8,dpi=2400)
df_citing_e<-read.csv("施引专利_第一阶段_学科主题.csv")
df_citing_f<-read.csv("施引专利_第二阶段_学科主题.csv")
df_citing_g<-read.csv("施引专利_第三阶段_学科主题.csv")
df_citing_h<-read.csv("施引专利_第四阶段_学科主题.csv")
df_citing_i<-read.csv("施引专利_第五阶段_学科主题.csv")
myfunction_1<-function(df,l){
p<-ggplot(df, aes(x = IPC , y = Topic, size = Quantity, color=IPC))+ geom_point()+
#labs(x=NULL,y=NULL)+ #设置坐标轴标???
#guides(color = guide_legend( ncol = 1, byrow = True))+ #设置图例为一???
guides(color = "none")+ #隐藏颜色图例
#scale_size(range=c(0, 5))+
theme(panel.background = element_blank(), #设置背景???
panel.grid.major = element_line(colour = "gray"), #线条
panel.border = element_rect(colour="black",fill=NA), #边框黑色
plot.margin=margin(t=5, #上边???(top)
r=10, #右边???(right)
b=5, #下边???(bottom)
l=l, #左边???(left)
unit = 'pt'
),
#legend.position = "none",
axis.text.x = element_text(angle=45, hjust = 1, size = 5, family = "Times New Roman"),
axis.text.y = element_text(size = 6, family = "Times New Roman"),
axis.text = element_text(size = 6, family = "Times New Roman"),
axis.title = element_text(size = 8, family = "Times New Roman"),
legend.text = element_text(size =6, family = "Times New Roman"),
legend.title = element_text(size =8, family = "Times New Roman"),
legend.key.size = unit(2,"pt"), #图例符号大小
legend.direction = "vertical", #图例方向
legend.spacing = unit(0.01, "cm"),
legend.spacing.x = unit(0.01, "cm"),
)
return(p)
}
p5<-myfunction_1(df=df_citing_e,l=5)
p6<-myfunction_1(df=df_citing_f,l=5)
p7<-myfunction_1(df=df_citing_g,l=5)
p8<-myfunction_1(df=df_citing_h,l=5)
p9<-myfunction_1(df=df_citing_i,l=5)
layout1<-gridExtra::grid.arrange(p5,p6,p7,p8,p9,
layout_matrix=rbind(c(1,2),c(3,4),c(5,6))
)
ggsave("citing_bubble.png",layout1,width=10,height=8,dpi=2400)
